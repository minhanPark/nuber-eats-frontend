[{"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\apollo.ts":"1","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\client\\search.tsx":"2","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\owner\\my-restaurants.tsx":"3","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\user\\confirm-email.tsx":"4","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\owner\\add-dish.tsx":"5","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\components\\Header.tsx":"6","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\client\\category.tsx":"7","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\user\\edit-profile.tsx":"8","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\components\\form-error.tsx":"9","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\__generated__\\globalTypes.ts":"10","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\404.tsx":"11","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\components\\dish.tsx":"12","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\client\\restaurant.tsx":"13","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\components\\restaurant.tsx":"14","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\create-account.tsx":"15","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\components\\dish-option.tsx":"16","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\reportWebVitals.ts":"17","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\index.tsx":"18","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\hooks\\useMe.tsx":"19","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\owner\\add-restaurants.tsx":"20","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\order.tsx":"21","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\login.tsx":"22","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\fragments.ts":"23"},{"size":1624,"mtime":1614909617611,"results":"24","hashOfConfig":"25"},{"size":1342,"mtime":1612748237262,"results":"26","hashOfConfig":"25"},{"size":1840,"mtime":1614241779301,"results":"27","hashOfConfig":"25"},{"size":1787,"mtime":1612485013396,"results":"28","hashOfConfig":"25"},{"size":4792,"mtime":1614732570586,"results":"29","hashOfConfig":"25"},{"size":1052,"mtime":1612485013393,"results":"30","hashOfConfig":"25"},{"size":1000,"mtime":1612757881351,"results":"31","hashOfConfig":"25"},{"size":2945,"mtime":1612485013397,"results":"32","hashOfConfig":"25"},{"size":261,"mtime":1612929979697,"results":"33","hashOfConfig":"25"},{"size":2230,"mtime":1614911676642,"results":"34","hashOfConfig":"25"},{"size":547,"mtime":1612485013394,"results":"35","hashOfConfig":"25"},{"size":1991,"mtime":1614761332669,"results":"36","hashOfConfig":"25"},{"size":5600,"mtime":1614761383102,"results":"37","hashOfConfig":"25"},{"size":708,"mtime":1612832093763,"results":"38","hashOfConfig":"25"},{"size":4263,"mtime":1613352509411,"results":"39","hashOfConfig":"25"},{"size":914,"mtime":1614761176093,"results":"40","hashOfConfig":"25"},{"size":425,"mtime":1611541843032,"results":"41","hashOfConfig":"25"},{"size":794,"mtime":1612835936115,"results":"42","hashOfConfig":"25"},{"size":305,"mtime":1612923819537,"results":"43","hashOfConfig":"25"},{"size":4518,"mtime":1614242792410,"results":"44","hashOfConfig":"25"},{"size":2748,"mtime":1614911871336,"results":"45","hashOfConfig":"25"},{"size":3827,"mtime":1613352509412,"results":"46","hashOfConfig":"25"},{"size":965,"mtime":1614911361388,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2p1ied",{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"55"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\apollo.ts",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\client\\search.tsx",["99","100","101","102","103"],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\owner\\my-restaurants.tsx",["104","105"],"import { gql, useApolloClient, useQuery } from \"@apollo/client\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Restaurant } from \"../../components/restaurant\";\r\nimport { RESTAURANT_FRAGMENT } from \"../../fragments\";\r\nimport { myRestaurants } from \"../../__generated__/myRestaurants\";\r\n\r\nexport const MY_RESTAURANTS_QUERY = gql`\r\n  query myRestaurants {\r\n    myRestaurants {\r\n      ok\r\n      error\r\n      restaurants {\r\n        ...RestaurantParts\r\n      }\r\n    }\r\n  }\r\n  ${RESTAURANT_FRAGMENT}\r\n`;\r\n\r\nexport const MyRestaurants = () => {\r\n  const { data } = useQuery<myRestaurants>(MY_RESTAURANTS_QUERY);\r\n  console.log(data);\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>My Restaurants | Nuber Eats</title>\r\n      </Helmet>\r\n      <div className=\"max-w-screen-2xl mx-auto mt-32\">\r\n        <h2 className=\"text-4xl font-medium mb-10\">My Restaurants</h2>\r\n        {data?.myRestaurants.ok &&\r\n        data.myRestaurants.restaurants.length === 0 ? (\r\n          <>\r\n            <h4 className=\"text-xl mb-5\">You Have no restaurants.</h4>\r\n            <Link\r\n              to=\"/add-restaurant\"\r\n              className=\"text-lime-600 hover:underline\"\r\n            >\r\n              Create one &rarr;\r\n            </Link>\r\n          </>\r\n        ) : (\r\n          <div className=\"grid mt-16 md:grid-cols-3 gap-x-5 gap-y-10\">\r\n            {data?.myRestaurants.restaurants.map((restaurant) => (\r\n              <Restaurant\r\n                key={restaurant.id}\r\n                id={restaurant.id + \"\"}\r\n                coverImg={restaurant.coverImg}\r\n                name={restaurant.name}\r\n                categoryName={restaurant.category?.name}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n",["106","107"],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\user\\confirm-email.tsx",["108"],"import { gql, useApolloClient, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useMe } from \"../../hooks/useMe\";\r\nimport {\r\n  verifyEmail,\r\n  verifyEmailVariables,\r\n} from \"../../__generated__/verifyEmail\";\r\n\r\nconst VERIFY_EMAIL_MUTATION = gql`\r\n  mutation verifyEmail($input: VerifyEmailInput!) {\r\n    verifyEmail(input: $input) {\r\n      ok\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ConfirmEmail = () => {\r\n  const { data: userData } = useMe();\r\n  const client = useApolloClient();\r\n  const history = useHistory();\r\n  const onCompleted = (data: verifyEmail) => {\r\n    const {\r\n      verifyEmail: { ok },\r\n    } = data;\r\n    if (ok && userData?.me.id) {\r\n      client.writeFragment({\r\n        id: `User:${userData.me.id}`,\r\n        fragment: gql`\r\n          fragment VerifiedUser on User {\r\n            verified\r\n          }\r\n        `,\r\n        data: {\r\n          verified: true,\r\n        },\r\n      });\r\n    }\r\n    history.push(\"/\");\r\n  };\r\n  const [verifyEmail] = useMutation<verifyEmail, verifyEmailVariables>(\r\n    VERIFY_EMAIL_MUTATION,\r\n    {\r\n      onCompleted,\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    const [_, code] = window.location.href.split(\"code=\");\r\n    verifyEmail({\r\n      variables: {\r\n        input: {\r\n          code,\r\n        },\r\n      },\r\n    });\r\n  }, [verifyEmail]);\r\n  return (\r\n    <div className=\"mt-52 flex flex-col items-center justify-center\">\r\n      <Helmet>\r\n        <title>Verify Email | Nuber Eats</title>\r\n      </Helmet>\r\n      <h2 className=\"text-lg mb-1 font-medium\">Confirming email...</h2>\r\n      <h4 className=\"text-gray-700 text-sm\">\r\n        Please wait, don't close this page\r\n      </h4>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\owner\\add-dish.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\components\\Header.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\client\\category.tsx",["109"],"import { gql, useQuery } from \"@apollo/client\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { CATEGORY_FRAGMENT, RESTAURANT_FRAGMENT } from \"../../fragments\";\r\nimport { category, categoryVariables } from \"../../__generated__/category\";\r\n\r\nconst CATEGORY_QUERY = gql`\r\n  query category($input: CategoryInput!) {\r\n    category(input: $input) {\r\n      ok\r\n      error\r\n      totalPages\r\n      totalResults\r\n      restaurants {\r\n        ...RestaurantParts\r\n      }\r\n      category {\r\n        ...CategoryParts\r\n      }\r\n    }\r\n  }\r\n  ${RESTAURANT_FRAGMENT}\r\n  ${CATEGORY_FRAGMENT}\r\n`;\r\n\r\ninterface ICategoryParams {\r\n  slug: string;\r\n}\r\n\r\nexport const Category = () => {\r\n  const params = useParams<ICategoryParams>();\r\n  const { data, loading } = useQuery<category, categoryVariables>(\r\n    CATEGORY_QUERY,\r\n    {\r\n      variables: {\r\n        input: {\r\n          page: 1,\r\n          slug: params.slug,\r\n        },\r\n      },\r\n    }\r\n  );\r\n  console.log(data);\r\n  return <h1>Category</h1>;\r\n};\r\n",["110","111"],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\user\\edit-profile.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\components\\form-error.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\__generated__\\globalTypes.ts",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\404.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\components\\dish.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\client\\restaurant.tsx",["112","113","114"],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\components\\restaurant.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\create-account.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\components\\dish-option.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\index.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\hooks\\useMe.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\owner\\add-restaurants.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\order.tsx",["115"],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\login.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\fragments.ts",[],{"ruleId":"116","severity":1,"message":"117","line":29,"column":23,"nodeType":"118","messageId":"119","endLine":29,"endColumn":30},{"ruleId":"116","severity":1,"message":"120","line":29,"column":32,"nodeType":"118","messageId":"119","endLine":29,"endColumn":36},{"ruleId":"116","severity":1,"message":"121","line":29,"column":38,"nodeType":"118","messageId":"119","endLine":29,"endColumn":44},{"ruleId":"116","severity":1,"message":"122","line":34,"column":12,"nodeType":"118","messageId":"119","endLine":34,"endColumn":13},{"ruleId":"123","severity":1,"message":"124","line":46,"column":6,"nodeType":"125","endLine":46,"endColumn":25,"suggestions":"126"},{"ruleId":"116","severity":1,"message":"127","line":1,"column":15,"nodeType":"118","messageId":"119","endLine":1,"endColumn":30},{"ruleId":"116","severity":1,"message":"128","line":2,"column":17,"nodeType":"118","messageId":"119","endLine":2,"endColumn":26},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"116","severity":1,"message":"122","line":50,"column":12,"nodeType":"118","messageId":"119","endLine":50,"endColumn":13},{"ruleId":"116","severity":1,"message":"117","line":31,"column":17,"nodeType":"118","messageId":"119","endLine":31,"endColumn":24},{"ruleId":"129","replacedBy":"133"},{"ruleId":"131","replacedBy":"134"},{"ruleId":"116","severity":1,"message":"135","line":31,"column":7,"nodeType":"118","messageId":"119","endLine":31,"endColumn":28},{"ruleId":"116","severity":1,"message":"117","line":47,"column":11,"nodeType":"118","messageId":"119","endLine":47,"endColumn":18},{"ruleId":"136","severity":1,"message":"137","line":86,"column":57,"nodeType":"138","messageId":"139","endLine":86,"endColumn":59},{"ruleId":"116","severity":1,"message":"140","line":46,"column":17,"nodeType":"118","messageId":"119","endLine":46,"endColumn":33},"@typescript-eslint/no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","'called' is assigned a value but never used.","'_' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'callQuery'. Either include it or remove the dependency array.","ArrayExpression",["141"],"'useApolloClient' is defined but never used.","'useEffect' is defined but never used.","no-native-reassign",["142"],"no-negated-in-lhs",["143"],["142"],["143"],"'CREATE_ORDER_MUTATION' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'subscriptionData' is assigned a value but never used.",{"desc":"144","fix":"145"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [callQuery, histroy, location]",{"range":"146","text":"147"},[1169,1188],"[callQuery, histroy, location]"]
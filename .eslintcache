[{"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\reportWebVitals.ts":"1","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\client\\search.tsx":"2","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\components\\button.tsx":"3","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\client\\restaurants.tsx":"4","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\components\\restaurant.tsx":"5","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\user\\confirm-email.tsx":"6","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\login.tsx":"7","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\routers\\logged-in-router.tsx":"8","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\components\\form-error.tsx":"9","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\404.tsx":"10","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\fragments.ts":"11","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\__generated__\\globalTypes.ts":"12","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\index.tsx":"13","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\create-account.tsx":"14","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\client\\category.tsx":"15"},{"size":425,"mtime":1611541843032,"results":"16","hashOfConfig":"17"},{"size":1342,"mtime":1612748237262,"results":"18","hashOfConfig":"17"},{"size":510,"mtime":1611879340750,"results":"19","hashOfConfig":"17"},{"size":4363,"mtime":1612757800216,"results":"20","hashOfConfig":"17"},{"size":592,"mtime":1612485013393,"results":"21","hashOfConfig":"17"},{"size":1787,"mtime":1612485013396,"results":"22","hashOfConfig":"17"},{"size":3820,"mtime":1611886837320,"results":"23","hashOfConfig":"17"},{"size":1364,"mtime":1612752458665,"results":"24","hashOfConfig":"17"},{"size":238,"mtime":1611794910622,"results":"25","hashOfConfig":"17"},{"size":547,"mtime":1612485013394,"results":"26","hashOfConfig":"17"},{"size":383,"mtime":1612757096325,"results":"27","hashOfConfig":"17"},{"size":1077,"mtime":1612757420160,"results":"28","hashOfConfig":"17"},{"size":779,"mtime":1611886399539,"results":"29","hashOfConfig":"17"},{"size":4293,"mtime":1612228547415,"results":"30","hashOfConfig":"17"},{"size":1000,"mtime":1612757881351,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"2p1ied",{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\reportWebVitals.ts",[],["67","68"],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\client\\search.tsx",["69","70","71","72","73"],"import { gql, useLazyQuery } from \"@apollo/client\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { RESTAURANT_FRAGMENT } from \"../../fragments\";\r\nimport {\r\n  searchRestaurant,\r\n  searchRestaurantVariables,\r\n} from \"../../__generated__/searchRestaurant\";\r\n\r\nconst SEARCH_RESTAURANT = gql`\r\n  query searchRestaurant($input: SearchRestaurantInput!) {\r\n    searchRestaurant(input: $input) {\r\n      ok\r\n      error\r\n      totalPages\r\n      totalResults\r\n      restaurants {\r\n        ...RestaurantParts\r\n      }\r\n    }\r\n  }\r\n  ${RESTAURANT_FRAGMENT}\r\n`;\r\n\r\nexport const Search = () => {\r\n  const location = useLocation();\r\n  const histroy = useHistory();\r\n  const [callQuery, { loading, data, called }] = useLazyQuery<\r\n    searchRestaurant,\r\n    searchRestaurantVariables\r\n  >(SEARCH_RESTAURANT);\r\n  useEffect(() => {\r\n    const [_, query] = location.search.split(\"?term=\");\r\n    if (!query) {\r\n      return histroy.replace(\"/\");\r\n    }\r\n    callQuery({\r\n      variables: {\r\n        input: {\r\n          page: 1,\r\n          query,\r\n        },\r\n      },\r\n    });\r\n  }, [histroy, location]);\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>Search | Nuber Eats</title>\r\n      </Helmet>\r\n      <h1>Search Page</h1>\r\n    </div>\r\n  );\r\n};\r\n",["74","75"],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\components\\button.tsx",[],["76","77"],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\client\\restaurants.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\components\\restaurant.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\user\\confirm-email.tsx",["78"],"import { gql, useApolloClient, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useMe } from \"../../hooks/useMe\";\r\nimport {\r\n  verifyEmail,\r\n  verifyEmailVariables,\r\n} from \"../../__generated__/verifyEmail\";\r\n\r\nconst VERIFY_EMAIL_MUTATION = gql`\r\n  mutation verifyEmail($input: VerifyEmailInput!) {\r\n    verifyEmail(input: $input) {\r\n      ok\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ConfirmEmail = () => {\r\n  const { data: userData } = useMe();\r\n  const client = useApolloClient();\r\n  const history = useHistory();\r\n  const onCompleted = (data: verifyEmail) => {\r\n    const {\r\n      verifyEmail: { ok },\r\n    } = data;\r\n    if (ok && userData?.me.id) {\r\n      client.writeFragment({\r\n        id: `User:${userData.me.id}`,\r\n        fragment: gql`\r\n          fragment VerifiedUser on User {\r\n            verified\r\n          }\r\n        `,\r\n        data: {\r\n          verified: true,\r\n        },\r\n      });\r\n    }\r\n    history.push(\"/\");\r\n  };\r\n  const [verifyEmail] = useMutation<verifyEmail, verifyEmailVariables>(\r\n    VERIFY_EMAIL_MUTATION,\r\n    {\r\n      onCompleted,\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    const [_, code] = window.location.href.split(\"code=\");\r\n    verifyEmail({\r\n      variables: {\r\n        input: {\r\n          code,\r\n        },\r\n      },\r\n    });\r\n  }, [verifyEmail]);\r\n  return (\r\n    <div className=\"mt-52 flex flex-col items-center justify-center\">\r\n      <Helmet>\r\n        <title>Verify Email | Nuber Eats</title>\r\n      </Helmet>\r\n      <h2 className=\"text-lg mb-1 font-medium\">Confirming email...</h2>\r\n      <h4 className=\"text-gray-700 text-sm\">\r\n        Please wait, don't close this page\r\n      </h4>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\login.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\routers\\logged-in-router.tsx",["79","80"],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\components\\form-error.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\404.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\fragments.ts",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\__generated__\\globalTypes.ts",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\index.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\create-account.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\client\\category.tsx",["81"],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":29,"column":23,"nodeType":"88","messageId":"89","endLine":29,"endColumn":30},{"ruleId":"86","severity":1,"message":"90","line":29,"column":32,"nodeType":"88","messageId":"89","endLine":29,"endColumn":36},{"ruleId":"86","severity":1,"message":"91","line":29,"column":38,"nodeType":"88","messageId":"89","endLine":29,"endColumn":44},{"ruleId":"86","severity":1,"message":"92","line":34,"column":12,"nodeType":"88","messageId":"89","endLine":34,"endColumn":13},{"ruleId":"93","severity":1,"message":"94","line":46,"column":6,"nodeType":"95","endLine":46,"endColumn":25,"suggestions":"96"},{"ruleId":"82","replacedBy":"97"},{"ruleId":"84","replacedBy":"98"},{"ruleId":"82","replacedBy":"99"},{"ruleId":"84","replacedBy":"100"},{"ruleId":"86","severity":1,"message":"92","line":50,"column":12,"nodeType":"88","messageId":"89","endLine":50,"endColumn":13},{"ruleId":"86","severity":1,"message":"101","line":3,"column":3,"nodeType":"88","messageId":"89","endLine":3,"endColumn":11},{"ruleId":"86","severity":1,"message":"102","line":8,"column":10,"nodeType":"88","messageId":"89","endLine":8,"endColumn":23},{"ruleId":"86","severity":1,"message":"87","line":31,"column":17,"nodeType":"88","messageId":"89","endLine":31,"endColumn":24},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"@typescript-eslint/no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","'called' is assigned a value but never used.","'_' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'callQuery'. Either include it or remove the dependency array.","ArrayExpression",["105"],["103"],["104"],["103"],["104"],"'Redirect' is defined but never used.","'isLoggedInVar' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},"Update the dependencies array to be: [callQuery, histroy, location]",{"range":"108","text":"109"},[1169,1188],"[callQuery, histroy, location]"]
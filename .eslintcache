[{"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\reportWebVitals.ts":"1","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\client\\search.tsx":"2","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\components\\button.tsx":"3","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\client\\restaurants.tsx":"4","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\components\\restaurant.tsx":"5","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\user\\confirm-email.tsx":"6","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\login.tsx":"7","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\routers\\logged-in-router.tsx":"8","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\components\\form-error.tsx":"9","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\404.tsx":"10","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\fragments.ts":"11","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\__generated__\\globalTypes.ts":"12","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\index.tsx":"13","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\create-account.tsx":"14","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\client\\category.tsx":"15","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\components\\Header.tsx":"16","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\hooks\\useMe.tsx":"17","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\client\\restaurant.tsx":"18","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\user\\edit-profile.tsx":"19","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\apollo.ts":"20"},{"size":425,"mtime":1611541843032,"results":"21","hashOfConfig":"22"},{"size":1342,"mtime":1612748237262,"results":"23","hashOfConfig":"22"},{"size":529,"mtime":1613352509410,"results":"24","hashOfConfig":"22"},{"size":4363,"mtime":1612757800216,"results":"25","hashOfConfig":"22"},{"size":708,"mtime":1612832093763,"results":"26","hashOfConfig":"22"},{"size":1787,"mtime":1612485013396,"results":"27","hashOfConfig":"22"},{"size":3827,"mtime":1613352509412,"results":"28","hashOfConfig":"22"},{"size":1364,"mtime":1612752458665,"results":"29","hashOfConfig":"22"},{"size":261,"mtime":1612929979697,"results":"30","hashOfConfig":"22"},{"size":547,"mtime":1612485013394,"results":"31","hashOfConfig":"22"},{"size":383,"mtime":1612757096325,"results":"32","hashOfConfig":"22"},{"size":1139,"mtime":1613979044825,"results":"33","hashOfConfig":"22"},{"size":794,"mtime":1612835936115,"results":"34","hashOfConfig":"22"},{"size":4263,"mtime":1613352509411,"results":"35","hashOfConfig":"22"},{"size":1000,"mtime":1612757881351,"results":"36","hashOfConfig":"22"},{"size":1052,"mtime":1612485013393,"results":"37","hashOfConfig":"22"},{"size":305,"mtime":1612923819537,"results":"38","hashOfConfig":"22"},{"size":1628,"mtime":1612834679374,"results":"39","hashOfConfig":"22"},{"size":2945,"mtime":1612485013397,"results":"40","hashOfConfig":"22"},{"size":1046,"mtime":1611889067194,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"2p1ied",{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\reportWebVitals.ts",[],["91","92"],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\client\\search.tsx",["93","94","95","96","97"],"import { gql, useLazyQuery } from \"@apollo/client\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { RESTAURANT_FRAGMENT } from \"../../fragments\";\r\nimport {\r\n  searchRestaurant,\r\n  searchRestaurantVariables,\r\n} from \"../../__generated__/searchRestaurant\";\r\n\r\nconst SEARCH_RESTAURANT = gql`\r\n  query searchRestaurant($input: SearchRestaurantInput!) {\r\n    searchRestaurant(input: $input) {\r\n      ok\r\n      error\r\n      totalPages\r\n      totalResults\r\n      restaurants {\r\n        ...RestaurantParts\r\n      }\r\n    }\r\n  }\r\n  ${RESTAURANT_FRAGMENT}\r\n`;\r\n\r\nexport const Search = () => {\r\n  const location = useLocation();\r\n  const histroy = useHistory();\r\n  const [callQuery, { loading, data, called }] = useLazyQuery<\r\n    searchRestaurant,\r\n    searchRestaurantVariables\r\n  >(SEARCH_RESTAURANT);\r\n  useEffect(() => {\r\n    const [_, query] = location.search.split(\"?term=\");\r\n    if (!query) {\r\n      return histroy.replace(\"/\");\r\n    }\r\n    callQuery({\r\n      variables: {\r\n        input: {\r\n          page: 1,\r\n          query,\r\n        },\r\n      },\r\n    });\r\n  }, [histroy, location]);\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>Search | Nuber Eats</title>\r\n      </Helmet>\r\n      <h1>Search Page</h1>\r\n    </div>\r\n  );\r\n};\r\n",["98","99"],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\components\\button.tsx",["100"],"import React from \"react\";\r\n\r\ninterface IButtonProps {\r\n  canClick: boolean;\r\n  loading: boolean;\r\n  actionText: string;\r\n}\r\n\r\nexport const Button: React.FC<IButtonProps> = ({\r\n  canClick,\r\n  loading,\r\n  actionText,\r\n}) => (\r\n  <button\r\n    role=\"button\"\r\n    className={`text-lg font-medium focus:outline-none text-white py-4  transition-colors ${\r\n      canClick\r\n        ? \"bg-lime-600 hover:bg-lime-700\"\r\n        : \"bg-gray-300 pointer-events-none\"\r\n    }`}\r\n  >\r\n    {loading ? \"Loading ...\" : actionText}\r\n  </button>\r\n);\r\n",["101","102"],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\client\\restaurants.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\components\\restaurant.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\user\\confirm-email.tsx",["103"],"import { gql, useApolloClient, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useMe } from \"../../hooks/useMe\";\r\nimport {\r\n  verifyEmail,\r\n  verifyEmailVariables,\r\n} from \"../../__generated__/verifyEmail\";\r\n\r\nconst VERIFY_EMAIL_MUTATION = gql`\r\n  mutation verifyEmail($input: VerifyEmailInput!) {\r\n    verifyEmail(input: $input) {\r\n      ok\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ConfirmEmail = () => {\r\n  const { data: userData } = useMe();\r\n  const client = useApolloClient();\r\n  const history = useHistory();\r\n  const onCompleted = (data: verifyEmail) => {\r\n    const {\r\n      verifyEmail: { ok },\r\n    } = data;\r\n    if (ok && userData?.me.id) {\r\n      client.writeFragment({\r\n        id: `User:${userData.me.id}`,\r\n        fragment: gql`\r\n          fragment VerifiedUser on User {\r\n            verified\r\n          }\r\n        `,\r\n        data: {\r\n          verified: true,\r\n        },\r\n      });\r\n    }\r\n    history.push(\"/\");\r\n  };\r\n  const [verifyEmail] = useMutation<verifyEmail, verifyEmailVariables>(\r\n    VERIFY_EMAIL_MUTATION,\r\n    {\r\n      onCompleted,\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    const [_, code] = window.location.href.split(\"code=\");\r\n    verifyEmail({\r\n      variables: {\r\n        input: {\r\n          code,\r\n        },\r\n      },\r\n    });\r\n  }, [verifyEmail]);\r\n  return (\r\n    <div className=\"mt-52 flex flex-col items-center justify-center\">\r\n      <Helmet>\r\n        <title>Verify Email | Nuber Eats</title>\r\n      </Helmet>\r\n      <h2 className=\"text-lg mb-1 font-medium\">Confirming email...</h2>\r\n      <h4 className=\"text-gray-700 text-sm\">\r\n        Please wait, don't close this page\r\n      </h4>\r\n    </div>\r\n  );\r\n};\r\n",["104","105"],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\login.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\routers\\logged-in-router.tsx",["106","107"],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\components\\form-error.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\404.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\fragments.ts",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\__generated__\\globalTypes.ts",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\index.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\create-account.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\client\\category.tsx",["108"],"import { gql, useQuery } from \"@apollo/client\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { CATEGORY_FRAGMENT, RESTAURANT_FRAGMENT } from \"../../fragments\";\r\nimport { category, categoryVariables } from \"../../__generated__/category\";\r\n\r\nconst CATEGORY_QUERY = gql`\r\n  query category($input: CategoryInput!) {\r\n    category(input: $input) {\r\n      ok\r\n      error\r\n      totalPages\r\n      totalResults\r\n      restaurants {\r\n        ...RestaurantParts\r\n      }\r\n      category {\r\n        ...CategoryParts\r\n      }\r\n    }\r\n  }\r\n  ${RESTAURANT_FRAGMENT}\r\n  ${CATEGORY_FRAGMENT}\r\n`;\r\n\r\ninterface ICategoryParams {\r\n  slug: string;\r\n}\r\n\r\nexport const Category = () => {\r\n  const params = useParams<ICategoryParams>();\r\n  const { data, loading } = useQuery<category, categoryVariables>(\r\n    CATEGORY_QUERY,\r\n    {\r\n      variables: {\r\n        input: {\r\n          page: 1,\r\n          slug: params.slug,\r\n        },\r\n      },\r\n    }\r\n  );\r\n  console.log(data);\r\n  return <h1>Category</h1>;\r\n};\r\n","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\components\\Header.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\hooks\\useMe.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\client\\restaurant.tsx",["109"],"import { gql, useQuery } from \"@apollo/client\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { RESTAURANT_FRAGMENT } from \"../../fragments\";\r\nimport {\r\n  restaurant,\r\n  restaurantVariables,\r\n} from \"../../__generated__/restaurant\";\r\n\r\nconst RESTAURANT_QUERY = gql`\r\n  query restaurant($input: RestaurantInput!) {\r\n    restaurant(input: $input) {\r\n      ok\r\n      error\r\n      restaurant {\r\n        ...RestaurantParts\r\n      }\r\n    }\r\n  }\r\n  ${RESTAURANT_FRAGMENT}\r\n`;\r\n\r\ninterface IRestaurantParams {\r\n  id: string;\r\n}\r\n\r\nexport const Restaurant = () => {\r\n  const params = useParams<IRestaurantParams>();\r\n  const { loading, data } = useQuery<restaurant, restaurantVariables>(\r\n    RESTAURANT_QUERY,\r\n    {\r\n      variables: {\r\n        input: {\r\n          restaurantId: +params.id,\r\n        },\r\n      },\r\n    }\r\n  );\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>{data?.restaurant.restaurant?.name || \"\"} | Nuber Eats</title>\r\n      </Helmet>\r\n      <div\r\n        className=\"bg-gray-800 bg-center bg-cover py-48\"\r\n        style={{\r\n          backgroundImage: `url(${data?.restaurant.restaurant?.coverImg})`,\r\n        }}\r\n      >\r\n        <div className=\"bg-white w-3/12 py-8 pl-48\">\r\n          <h4 className=\"text-4xl mb-3\">{data?.restaurant.restaurant?.name}</h4>\r\n          <h5 className=\"text-sm font-light mb-2\">\r\n            {data?.restaurant.restaurant?.category?.name}\r\n          </h5>\r\n          <h6 className=\"text-sm font-light\">\r\n            {data?.restaurant.restaurant?.address}\r\n          </h6>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\user\\edit-profile.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\apollo.ts",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":29,"column":23,"nodeType":"116","messageId":"117","endLine":29,"endColumn":30},{"ruleId":"114","severity":1,"message":"118","line":29,"column":32,"nodeType":"116","messageId":"117","endLine":29,"endColumn":36},{"ruleId":"114","severity":1,"message":"119","line":29,"column":38,"nodeType":"116","messageId":"117","endLine":29,"endColumn":44},{"ruleId":"114","severity":1,"message":"120","line":34,"column":12,"nodeType":"116","messageId":"117","endLine":34,"endColumn":13},{"ruleId":"121","severity":1,"message":"122","line":46,"column":6,"nodeType":"123","endLine":46,"endColumn":25,"suggestions":"124"},{"ruleId":"110","replacedBy":"125"},{"ruleId":"112","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":14,"column":3,"nodeType":"129","endLine":21,"endColumn":4},{"ruleId":"110","replacedBy":"130"},{"ruleId":"112","replacedBy":"131"},{"ruleId":"114","severity":1,"message":"120","line":50,"column":12,"nodeType":"116","messageId":"117","endLine":50,"endColumn":13},{"ruleId":"110","replacedBy":"132"},{"ruleId":"112","replacedBy":"133"},{"ruleId":"114","severity":1,"message":"134","line":3,"column":3,"nodeType":"116","messageId":"117","endLine":3,"endColumn":11},{"ruleId":"114","severity":1,"message":"135","line":8,"column":10,"nodeType":"116","messageId":"117","endLine":8,"endColumn":23},{"ruleId":"114","severity":1,"message":"115","line":31,"column":17,"nodeType":"116","messageId":"117","endLine":31,"endColumn":24},{"ruleId":"114","severity":1,"message":"115","line":29,"column":11,"nodeType":"116","messageId":"117","endLine":29,"endColumn":18},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"@typescript-eslint/no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","'called' is assigned a value but never used.","'_' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'callQuery'. Either include it or remove the dependency array.","ArrayExpression",["138"],["136"],["137"],"jsx-a11y/no-redundant-roles","The element button has an implicit role of button. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement",["136"],["137"],["136"],["137"],"'Redirect' is defined but never used.","'isLoggedInVar' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},"Update the dependencies array to be: [callQuery, histroy, location]",{"range":"141","text":"142"},[1169,1188],"[callQuery, histroy, location]"]
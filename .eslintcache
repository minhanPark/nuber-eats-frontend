[{"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\reportWebVitals.ts":"1","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\client\\search.tsx":"2","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\components\\button.tsx":"3","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\client\\restaurants.tsx":"4","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\components\\restaurant.tsx":"5","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\user\\confirm-email.tsx":"6","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\login.tsx":"7","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\routers\\logged-in-router.tsx":"8","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\components\\form-error.tsx":"9","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\404.tsx":"10","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\fragments.ts":"11","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\__generated__\\globalTypes.ts":"12","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\index.tsx":"13","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\create-account.tsx":"14","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\client\\category.tsx":"15","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\components\\Header.tsx":"16","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\hooks\\useMe.tsx":"17","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\client\\restaurant.tsx":"18"},{"size":425,"mtime":1611541843032,"results":"19","hashOfConfig":"20"},{"size":1342,"mtime":1612748237262,"results":"21","hashOfConfig":"20"},{"size":510,"mtime":1611879340750,"results":"22","hashOfConfig":"20"},{"size":4363,"mtime":1612757800216,"results":"23","hashOfConfig":"20"},{"size":708,"mtime":1612832093763,"results":"24","hashOfConfig":"20"},{"size":1787,"mtime":1612485013396,"results":"25","hashOfConfig":"20"},{"size":3820,"mtime":1611886837320,"results":"26","hashOfConfig":"20"},{"size":1364,"mtime":1612752458665,"results":"27","hashOfConfig":"20"},{"size":238,"mtime":1611794910622,"results":"28","hashOfConfig":"20"},{"size":547,"mtime":1612485013394,"results":"29","hashOfConfig":"20"},{"size":383,"mtime":1612757096325,"results":"30","hashOfConfig":"20"},{"size":1139,"mtime":1612832983539,"results":"31","hashOfConfig":"20"},{"size":779,"mtime":1611886399539,"results":"32","hashOfConfig":"20"},{"size":4293,"mtime":1612228547415,"results":"33","hashOfConfig":"20"},{"size":1000,"mtime":1612757881351,"results":"34","hashOfConfig":"20"},{"size":1052,"mtime":1612485013393,"results":"35","hashOfConfig":"20"},{"size":298,"mtime":1612232940131,"results":"36","hashOfConfig":"20"},{"size":1628,"mtime":1612834679374,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"2p1ied",{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\reportWebVitals.ts",[],["81","82"],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\client\\search.tsx",["83","84","85","86","87"],"import { gql, useLazyQuery } from \"@apollo/client\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { RESTAURANT_FRAGMENT } from \"../../fragments\";\r\nimport {\r\n  searchRestaurant,\r\n  searchRestaurantVariables,\r\n} from \"../../__generated__/searchRestaurant\";\r\n\r\nconst SEARCH_RESTAURANT = gql`\r\n  query searchRestaurant($input: SearchRestaurantInput!) {\r\n    searchRestaurant(input: $input) {\r\n      ok\r\n      error\r\n      totalPages\r\n      totalResults\r\n      restaurants {\r\n        ...RestaurantParts\r\n      }\r\n    }\r\n  }\r\n  ${RESTAURANT_FRAGMENT}\r\n`;\r\n\r\nexport const Search = () => {\r\n  const location = useLocation();\r\n  const histroy = useHistory();\r\n  const [callQuery, { loading, data, called }] = useLazyQuery<\r\n    searchRestaurant,\r\n    searchRestaurantVariables\r\n  >(SEARCH_RESTAURANT);\r\n  useEffect(() => {\r\n    const [_, query] = location.search.split(\"?term=\");\r\n    if (!query) {\r\n      return histroy.replace(\"/\");\r\n    }\r\n    callQuery({\r\n      variables: {\r\n        input: {\r\n          page: 1,\r\n          query,\r\n        },\r\n      },\r\n    });\r\n  }, [histroy, location]);\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>Search | Nuber Eats</title>\r\n      </Helmet>\r\n      <h1>Search Page</h1>\r\n    </div>\r\n  );\r\n};\r\n",["88","89"],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\components\\button.tsx",[],["90","91"],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\client\\restaurants.tsx",[],["92","93"],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\components\\restaurant.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\user\\confirm-email.tsx",["94"],"import { gql, useApolloClient, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useMe } from \"../../hooks/useMe\";\r\nimport {\r\n  verifyEmail,\r\n  verifyEmailVariables,\r\n} from \"../../__generated__/verifyEmail\";\r\n\r\nconst VERIFY_EMAIL_MUTATION = gql`\r\n  mutation verifyEmail($input: VerifyEmailInput!) {\r\n    verifyEmail(input: $input) {\r\n      ok\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ConfirmEmail = () => {\r\n  const { data: userData } = useMe();\r\n  const client = useApolloClient();\r\n  const history = useHistory();\r\n  const onCompleted = (data: verifyEmail) => {\r\n    const {\r\n      verifyEmail: { ok },\r\n    } = data;\r\n    if (ok && userData?.me.id) {\r\n      client.writeFragment({\r\n        id: `User:${userData.me.id}`,\r\n        fragment: gql`\r\n          fragment VerifiedUser on User {\r\n            verified\r\n          }\r\n        `,\r\n        data: {\r\n          verified: true,\r\n        },\r\n      });\r\n    }\r\n    history.push(\"/\");\r\n  };\r\n  const [verifyEmail] = useMutation<verifyEmail, verifyEmailVariables>(\r\n    VERIFY_EMAIL_MUTATION,\r\n    {\r\n      onCompleted,\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    const [_, code] = window.location.href.split(\"code=\");\r\n    verifyEmail({\r\n      variables: {\r\n        input: {\r\n          code,\r\n        },\r\n      },\r\n    });\r\n  }, [verifyEmail]);\r\n  return (\r\n    <div className=\"mt-52 flex flex-col items-center justify-center\">\r\n      <Helmet>\r\n        <title>Verify Email | Nuber Eats</title>\r\n      </Helmet>\r\n      <h2 className=\"text-lg mb-1 font-medium\">Confirming email...</h2>\r\n      <h4 className=\"text-gray-700 text-sm\">\r\n        Please wait, don't close this page\r\n      </h4>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\login.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\routers\\logged-in-router.tsx",["95","96"],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\components\\form-error.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\404.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\fragments.ts",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\__generated__\\globalTypes.ts",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\index.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\create-account.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\client\\category.tsx",["97"],"import { gql, useQuery } from \"@apollo/client\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { CATEGORY_FRAGMENT, RESTAURANT_FRAGMENT } from \"../../fragments\";\r\nimport { category, categoryVariables } from \"../../__generated__/category\";\r\n\r\nconst CATEGORY_QUERY = gql`\r\n  query category($input: CategoryInput!) {\r\n    category(input: $input) {\r\n      ok\r\n      error\r\n      totalPages\r\n      totalResults\r\n      restaurants {\r\n        ...RestaurantParts\r\n      }\r\n      category {\r\n        ...CategoryParts\r\n      }\r\n    }\r\n  }\r\n  ${RESTAURANT_FRAGMENT}\r\n  ${CATEGORY_FRAGMENT}\r\n`;\r\n\r\ninterface ICategoryParams {\r\n  slug: string;\r\n}\r\n\r\nexport const Category = () => {\r\n  const params = useParams<ICategoryParams>();\r\n  const { data, loading } = useQuery<category, categoryVariables>(\r\n    CATEGORY_QUERY,\r\n    {\r\n      variables: {\r\n        input: {\r\n          page: 1,\r\n          slug: params.slug,\r\n        },\r\n      },\r\n    }\r\n  );\r\n  console.log(data);\r\n  return <h1>Category</h1>;\r\n};\r\n","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\components\\Header.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\hooks\\useMe.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\client\\restaurant.tsx",["98"],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":29,"column":23,"nodeType":"105","messageId":"106","endLine":29,"endColumn":30},{"ruleId":"103","severity":1,"message":"107","line":29,"column":32,"nodeType":"105","messageId":"106","endLine":29,"endColumn":36},{"ruleId":"103","severity":1,"message":"108","line":29,"column":38,"nodeType":"105","messageId":"106","endLine":29,"endColumn":44},{"ruleId":"103","severity":1,"message":"109","line":34,"column":12,"nodeType":"105","messageId":"106","endLine":34,"endColumn":13},{"ruleId":"110","severity":1,"message":"111","line":46,"column":6,"nodeType":"112","endLine":46,"endColumn":25,"suggestions":"113"},{"ruleId":"99","replacedBy":"114"},{"ruleId":"101","replacedBy":"115"},{"ruleId":"99","replacedBy":"116"},{"ruleId":"101","replacedBy":"117"},{"ruleId":"99","replacedBy":"118"},{"ruleId":"101","replacedBy":"119"},{"ruleId":"103","severity":1,"message":"109","line":50,"column":12,"nodeType":"105","messageId":"106","endLine":50,"endColumn":13},{"ruleId":"103","severity":1,"message":"120","line":3,"column":3,"nodeType":"105","messageId":"106","endLine":3,"endColumn":11},{"ruleId":"103","severity":1,"message":"121","line":8,"column":10,"nodeType":"105","messageId":"106","endLine":8,"endColumn":23},{"ruleId":"103","severity":1,"message":"104","line":31,"column":17,"nodeType":"105","messageId":"106","endLine":31,"endColumn":24},{"ruleId":"103","severity":1,"message":"104","line":29,"column":11,"nodeType":"105","messageId":"106","endLine":29,"endColumn":18},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"@typescript-eslint/no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","'called' is assigned a value but never used.","'_' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'callQuery'. Either include it or remove the dependency array.","ArrayExpression",["124"],["122"],["123"],["122"],["123"],["122"],["123"],"'Redirect' is defined but never used.","'isLoggedInVar' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},"Update the dependencies array to be: [callQuery, histroy, location]",{"range":"127","text":"128"},[1169,1188],"[callQuery, histroy, location]"]
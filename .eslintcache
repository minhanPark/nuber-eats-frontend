[{"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\apollo.ts":"1","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\client\\restaurant.tsx":"2","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\hooks\\useMe.tsx":"3","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\owner\\my-restaurants.tsx":"4","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\components\\button.tsx":"5","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\components\\restaurant.tsx":"6","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\login.tsx":"7","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\owner\\add-restaurants.tsx":"8","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\__generated__\\globalTypes.ts":"9","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\index.tsx":"10","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\client\\category.tsx":"11","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\user\\edit-profile.tsx":"12","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\fragments.ts":"13","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\create-account.tsx":"14","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\client\\restaurants.tsx":"15","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\user\\confirm-email.tsx":"16","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\404.tsx":"17","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\components\\form-error.tsx":"18","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\components\\Header.tsx":"19","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\owner\\my-restaurant.tsx":"20","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\owner\\add-dish.tsx":"21"},{"size":1046,"mtime":1611889067194,"results":"22","hashOfConfig":"23"},{"size":1628,"mtime":1612834679374,"results":"24","hashOfConfig":"23"},{"size":305,"mtime":1612923819537,"results":"25","hashOfConfig":"23"},{"size":1840,"mtime":1614241779301,"results":"26","hashOfConfig":"23"},{"size":529,"mtime":1613352509410,"results":"27","hashOfConfig":"23"},{"size":708,"mtime":1612832093763,"results":"28","hashOfConfig":"23"},{"size":3827,"mtime":1613352509412,"results":"29","hashOfConfig":"23"},{"size":4518,"mtime":1614242792410,"results":"30","hashOfConfig":"23"},{"size":1684,"mtime":1614307075665,"results":"31","hashOfConfig":"23"},{"size":794,"mtime":1612835936115,"results":"32","hashOfConfig":"23"},{"size":1000,"mtime":1612757881351,"results":"33","hashOfConfig":"23"},{"size":2945,"mtime":1612485013397,"results":"34","hashOfConfig":"23"},{"size":620,"mtime":1614306457062,"results":"35","hashOfConfig":"23"},{"size":4263,"mtime":1613352509411,"results":"36","hashOfConfig":"23"},{"size":4363,"mtime":1612757800216,"results":"37","hashOfConfig":"23"},{"size":1787,"mtime":1612485013396,"results":"38","hashOfConfig":"23"},{"size":547,"mtime":1612485013394,"results":"39","hashOfConfig":"23"},{"size":261,"mtime":1612929979697,"results":"40","hashOfConfig":"23"},{"size":1052,"mtime":1612485013393,"results":"41","hashOfConfig":"23"},{"size":1823,"mtime":1614306938767,"results":"42","hashOfConfig":"23"},{"size":500,"mtime":1614307152619,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"2p1ied",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"71"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\apollo.ts",[],["93","94"],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\client\\restaurant.tsx",["95"],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\hooks\\useMe.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\owner\\my-restaurants.tsx",["96","97"],"import { gql, useApolloClient, useQuery } from \"@apollo/client\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Restaurant } from \"../../components/restaurant\";\r\nimport { RESTAURANT_FRAGMENT } from \"../../fragments\";\r\nimport { myRestaurants } from \"../../__generated__/myRestaurants\";\r\n\r\nexport const MY_RESTAURANTS_QUERY = gql`\r\n  query myRestaurants {\r\n    myRestaurants {\r\n      ok\r\n      error\r\n      restaurants {\r\n        ...RestaurantParts\r\n      }\r\n    }\r\n  }\r\n  ${RESTAURANT_FRAGMENT}\r\n`;\r\n\r\nexport const MyRestaurants = () => {\r\n  const { data } = useQuery<myRestaurants>(MY_RESTAURANTS_QUERY);\r\n  console.log(data);\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>My Restaurants | Nuber Eats</title>\r\n      </Helmet>\r\n      <div className=\"max-w-screen-2xl mx-auto mt-32\">\r\n        <h2 className=\"text-4xl font-medium mb-10\">My Restaurants</h2>\r\n        {data?.myRestaurants.ok &&\r\n        data.myRestaurants.restaurants.length === 0 ? (\r\n          <>\r\n            <h4 className=\"text-xl mb-5\">You Have no restaurants.</h4>\r\n            <Link\r\n              to=\"/add-restaurant\"\r\n              className=\"text-lime-600 hover:underline\"\r\n            >\r\n              Create one &rarr;\r\n            </Link>\r\n          </>\r\n        ) : (\r\n          <div className=\"grid mt-16 md:grid-cols-3 gap-x-5 gap-y-10\">\r\n            {data?.myRestaurants.restaurants.map((restaurant) => (\r\n              <Restaurant\r\n                key={restaurant.id}\r\n                id={restaurant.id + \"\"}\r\n                coverImg={restaurant.coverImg}\r\n                name={restaurant.name}\r\n                categoryName={restaurant.category?.name}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\components\\button.tsx",["98"],"import React from \"react\";\r\n\r\ninterface IButtonProps {\r\n  canClick: boolean;\r\n  loading: boolean;\r\n  actionText: string;\r\n}\r\n\r\nexport const Button: React.FC<IButtonProps> = ({\r\n  canClick,\r\n  loading,\r\n  actionText,\r\n}) => (\r\n  <button\r\n    role=\"button\"\r\n    className={`text-lg font-medium focus:outline-none text-white py-4  transition-colors ${\r\n      canClick\r\n        ? \"bg-lime-600 hover:bg-lime-700\"\r\n        : \"bg-gray-300 pointer-events-none\"\r\n    }`}\r\n  >\r\n    {loading ? \"Loading ...\" : actionText}\r\n  </button>\r\n);\r\n",["99","100"],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\components\\restaurant.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\login.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\owner\\add-restaurants.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\__generated__\\globalTypes.ts",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\index.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\client\\category.tsx",["101"],"import { gql, useQuery } from \"@apollo/client\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { CATEGORY_FRAGMENT, RESTAURANT_FRAGMENT } from \"../../fragments\";\r\nimport { category, categoryVariables } from \"../../__generated__/category\";\r\n\r\nconst CATEGORY_QUERY = gql`\r\n  query category($input: CategoryInput!) {\r\n    category(input: $input) {\r\n      ok\r\n      error\r\n      totalPages\r\n      totalResults\r\n      restaurants {\r\n        ...RestaurantParts\r\n      }\r\n      category {\r\n        ...CategoryParts\r\n      }\r\n    }\r\n  }\r\n  ${RESTAURANT_FRAGMENT}\r\n  ${CATEGORY_FRAGMENT}\r\n`;\r\n\r\ninterface ICategoryParams {\r\n  slug: string;\r\n}\r\n\r\nexport const Category = () => {\r\n  const params = useParams<ICategoryParams>();\r\n  const { data, loading } = useQuery<category, categoryVariables>(\r\n    CATEGORY_QUERY,\r\n    {\r\n      variables: {\r\n        input: {\r\n          page: 1,\r\n          slug: params.slug,\r\n        },\r\n      },\r\n    }\r\n  );\r\n  console.log(data);\r\n  return <h1>Category</h1>;\r\n};\r\n",["102","103"],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\user\\edit-profile.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\fragments.ts",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\create-account.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\client\\restaurants.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\user\\confirm-email.tsx",["104"],"import { gql, useApolloClient, useMutation } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useMe } from \"../../hooks/useMe\";\r\nimport {\r\n  verifyEmail,\r\n  verifyEmailVariables,\r\n} from \"../../__generated__/verifyEmail\";\r\n\r\nconst VERIFY_EMAIL_MUTATION = gql`\r\n  mutation verifyEmail($input: VerifyEmailInput!) {\r\n    verifyEmail(input: $input) {\r\n      ok\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ConfirmEmail = () => {\r\n  const { data: userData } = useMe();\r\n  const client = useApolloClient();\r\n  const history = useHistory();\r\n  const onCompleted = (data: verifyEmail) => {\r\n    const {\r\n      verifyEmail: { ok },\r\n    } = data;\r\n    if (ok && userData?.me.id) {\r\n      client.writeFragment({\r\n        id: `User:${userData.me.id}`,\r\n        fragment: gql`\r\n          fragment VerifiedUser on User {\r\n            verified\r\n          }\r\n        `,\r\n        data: {\r\n          verified: true,\r\n        },\r\n      });\r\n    }\r\n    history.push(\"/\");\r\n  };\r\n  const [verifyEmail] = useMutation<verifyEmail, verifyEmailVariables>(\r\n    VERIFY_EMAIL_MUTATION,\r\n    {\r\n      onCompleted,\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    const [_, code] = window.location.href.split(\"code=\");\r\n    verifyEmail({\r\n      variables: {\r\n        input: {\r\n          code,\r\n        },\r\n      },\r\n    });\r\n  }, [verifyEmail]);\r\n  return (\r\n    <div className=\"mt-52 flex flex-col items-center justify-center\">\r\n      <Helmet>\r\n        <title>Verify Email | Nuber Eats</title>\r\n      </Helmet>\r\n      <h2 className=\"text-lg mb-1 font-medium\">Confirming email...</h2>\r\n      <h4 className=\"text-gray-700 text-sm\">\r\n        Please wait, don't close this page\r\n      </h4>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\404.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\components\\form-error.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\components\\Header.tsx",[],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\owner\\my-restaurant.tsx",["105"],"C:\\Users\\박민한\\dev\\nuber-eats-frontend\\src\\pages\\owner\\add-dish.tsx",["106","107","108"],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":29,"column":11,"nodeType":"115","messageId":"116","endLine":29,"endColumn":18},{"ruleId":"113","severity":1,"message":"117","line":1,"column":15,"nodeType":"115","messageId":"116","endLine":1,"endColumn":30},{"ruleId":"113","severity":1,"message":"118","line":2,"column":17,"nodeType":"115","messageId":"116","endLine":2,"endColumn":26},{"ruleId":"119","severity":1,"message":"120","line":14,"column":3,"nodeType":"121","endLine":21,"endColumn":4},{"ruleId":"109","replacedBy":"122"},{"ruleId":"111","replacedBy":"123"},{"ruleId":"113","severity":1,"message":"114","line":31,"column":17,"nodeType":"115","messageId":"116","endLine":31,"endColumn":24},{"ruleId":"109","replacedBy":"124"},{"ruleId":"111","replacedBy":"125"},{"ruleId":"113","severity":1,"message":"126","line":50,"column":12,"nodeType":"115","messageId":"116","endLine":50,"endColumn":13},{"ruleId":"113","severity":1,"message":"127","line":7,"column":3,"nodeType":"115","messageId":"116","endLine":7,"endColumn":28},{"ruleId":"113","severity":1,"message":"128","line":18,"column":11,"nodeType":"115","messageId":"116","endLine":18,"endColumn":23},{"ruleId":"113","severity":1,"message":"129","line":19,"column":10,"nodeType":"115","messageId":"116","endLine":19,"endColumn":28},{"ruleId":"113","severity":1,"message":"114","line":19,"column":32,"nodeType":"115","messageId":"116","endLine":19,"endColumn":39},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"@typescript-eslint/no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'useApolloClient' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/no-redundant-roles","The element button has an implicit role of button. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement",["130"],["131"],["130"],["131"],"'_' is assigned a value but never used.","'myRestaurant_myRestaurant' is defined but never used.","'restaurantId' is assigned a value but never used.","'createDishMutation' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]